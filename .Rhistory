names(state_subset$outcome)
state_subset$`heart attack`
state_subset[outcome]
state_subset[[outcome]]
outcome_subset <- state_subset[state_subset[outcome] == !is.na]
outcome_subset <- state_subset[state_subset[[outcome]] == !is.na]
outcome_subset <- state_subset[!is.na(state_subset[[outcome]])
]
state_subset[, outcome]
testframe<- state_subset[, outcome]
complete.cases(state_subset[, outcome]
)
outcome_subset <- state_subset[complete.cases(state_subset[, outcome]]
outcome_subset <- state_subset[complete.cases(state_subset[, outcome])]
complete.cases(state_subset[, outcome])
state_subset[complete.cases(state_subset[, outcome])]
outcome_subset <- state_subset[state_subset[complete.cases(state_subset[, outcome])]
}
outcome_subset <- state_subset[state_subset[complete.cases(state_subset[, outcome])]]
state_subset[, outcome]
complete.cases(state_subset[, outcome])
state_subset[complete.cases(state_subset[, outcome]),]
state_subset$outcome
state_subset[outcome]
state_subset[,outcome]
state_subset[!is.na(state_subset[, outcome]),]
outcome_subset <- state_subset[!is.na(state_subset[, outcome]),]
outcome_subset <- state_subset[!is.na(state_subset[outcome]),]
outcome_subset <- state_subset[!is.na(state_subset[outcome,]),]
View(outcome_subset)
outcome_subset <- state_subset[!is.na(state_subset[,outcome]),]
View(outcome_subset)
state_subset[,outcome]
testframe <- state_subset[,outcome]
testframe <- state_subset[[,outcome]]
testframe <- state_subset[[outcome]]
?subset
is.na(outcome)
outcome
outcome_subset <- subset(state_subset, is.na(outcome))
View(outcome_subset)
subset(state_subset, is.na(outcome)
)
state_subset$outcome
state_subset[outcome]
state_subset[[outcome]]
is.na(state_subset[outcome])
outcome_subset <- subset(state_subset, is.na(state_subset[outcome]))
subset(state_subset, is.na(state_subset[outcome]))
outcome_subset <- subset(state_subset, is.na(state_subset[,outcome]))
outcome_subset <- subset(state_subset, is.na(state_subset[,"heart attack"]))
state_subset[,"heart attack"]
is.na(state_subset[,"heart attack"])
is.na(state_subset[,outcome])
state_subset[,outcome]
!is.na(state_subset[,outcome])
state_subset[!is.na(state_subset[,outcome]),]
outcome_subset <- state_subset[!is.na(state_subset[,outcome]),]
state_subset[complete_cases(state_subset[outcome]),]
state_subset[complete.cases(state_subset[outcome]),]
outcome_subset <- state_subset[complete.cases(state_subset[outcome]),]
state_subset[outcome]
testframe <- state_subset[outcome]
View(testframe)
testframe2 <- complete.cases(state_subset[outcome])
as.data.frame(testframe2)
complete.cases(state_subset[outcome])
!is.na(state_subset[outcome])
state_subset[outcome]
state_subset[outcome]
state_subset[outcome] == is.na()
is.na(state_subset[outcome])
state_subset[subset & !is.na(subset)]
state_subset[outcome & !is.na(state_subset)]
?order
?index
sorted_outcome <-  state_subset[order(outcome, Hospital.Name, na.last = NA),]
View(state_subset)
sorted_outcome <-  state_subset[order(outcome, "Hospital.Name", na.last = NA),]
View(state_subset)
View(state_subset)
order(state_subset, Hospital.Name)
order(state_subset, state_subset$Hospital.Name)
sort(state_subset, state_subset$Hospital.Name)
sort(state_subset, state_subset$Hospital.Name, decreasing = F)
sort(state_subset, Hospital.Name, decreasing = F)
sorted_outcome <-  state_subset[,order(state_subset, state_subset$Hospital.Name, na.last = NA),]
order(state_subset, state_subset$Hospital.Name)
state_subset[order(state_subset, state_subset$Hospital.Name)]
state <- "TX"
outcome <- "heart attack"
outcome_data <- read.csv("outcome-of-care-measures.csv")
View(outcome_data)
?sortby
outcome_options <- c("heart attack", "heart failure", "pneumonia")
colnames(outcome_data)[c(11,17,23)] <- outcome_options
state_subset <- outcome_data[outcome_data$State == state,]
View(state_subset)
colnames(state_subset)
sorted_outcome <-  state_subset[order(state_subset$`heart attack`, state_subset$Hospital.Name, na.last = NA),]
View(sorted_outcome)
sorted_outcome <-  state_subset[order(state_subset$outcome, state_subset$Hospital.Name, na.last = NA),]
sorted_outcome <-  state_subset[order(state_subset$as.character(outcome), state_subset$Hospital.Name, na.last = NA),]
state_subset[outcome]
sorted_outcome <-  state_subset[order(state_subset[outcome], state_subset$Hospital.Name, na.last = NA),]
View(state_subset)
?na.last
?order
as.character(sorted_outcome$Hospital.Name[1,])
as.character(sorted_outcome$Hospital.Name[1])
getwd
setwd("~/DataScience/RProgramming/Assignment3")
getwd
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("T", "heart attack")
best("TX", "eart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "heart pneumonia")
best("MD", "pneumonia")
state <- "TX"
outcome <- "heart failure"
outcome_data <- read.csv("outcome-of-care-measures.csv")
outcome_options <- c("heart attack", "heart failure", "pneumonia")
colnames(outcome_data)[c(11,17,23)] <- outcome_options
View(outcome_data)
state_subset <- outcome_data[outcome_data$State == state,]
View(state_subset)
sorted_outcome <-  state_subset[order(state_subset[outcome], state_subset$Hospital.Name, na.last = NA),]
View(sorted_outcome)
state_subset<-NULL
sorted_outcome <-  state_subset[order(state_subset[outcome], na.last = NA),]
state_subset <- outcome_data[outcome_data$State == state,]
sorted_outcome <-  state_subset[order(state_subset[outcome], na.last = NA),]
View(sorted_outcome)
sorted_outcome <-  state_subset[order(state_subset$Hospital.Name, na.last = NA),]
View(sorted_outcome)
sorted_outcome <- NULL
sorted_outcome <- null
state_subset <- null
state_subset <- NULL
state_subset <- outcome_data[outcome_data$State == state,]
sorted_outcome <-  state_subset[order(state_subset$Hospital.Name, na.last = TRUE),]
View(sorted_outcome)
sorted_outcome <-  state_subset[order(state_subset$Hospital.Name, na.last = NA),]
sorted_outcome <-  state_subset[order(state_subset[outcome],state_subset$Hospital.Name, na.last = NA),]
setwd("~/DataScience/RProgramming/Assignment3")
source("best.R")
best("TX","heart failure")
outcome_data <- read.csv("outcome-of-care-measures.csv")
outcome_options <- c("heart attack", "heart failure", "pneumonia")
colnames(outcome_data)[c(11,17,23)] <- outcome_options
state_subset <- outcome_data[outcome_data$State == state,]
sorted_outcome <-  state_subset[order(state_subset[outcome],state_subset$Hospital.Name, na.last = NA),]
colnames(outcome_data)[c(11,17,23)] <- outcome_options
state_subset <- outcome_data[outcome_data$State == state,]
state <-"TX"
outcome <-"heart failure"
sorted_outcome <-  state_subset[order(state_subset[outcome],state_subset$Hospital.Name, na.last = NA),]
state_subset <- outcome_data[outcome_data$State == state,]
sorted_outcome <-  state_subset[order(state_subset[outcome],state_subset$Hospital.Name, na.last = NA),]
View(sorted_outcome)
best_row <- which.min(sorted_outcome[[outcome]])
best_row <- which.min(sorted_outcome[outcome])
best_row <- which.min(sorted_outcome[[outcome]])
as.character(sorted_outcome$Hospital.Name[best_row])
source('~/DataScience/RProgramming/Assignment3/best.R')
setwd("~/DataScience/RProgramming/Assignment3")
source("best.R")
best("TX","heart failure")
outcome_data <- read.csv("outcome-of-care-measures.csv")
outcome_options <- c("heart attack", "heart failure", "pneumonia")
colnames(outcome_data)[c(11,17,23)] <- outcome_options
state <- "TX"
outcome <-"heart failure"
state_subset <- outcome_data[outcome_data$State == state,]
sorted_outcome <-  state_subset[order(state_subset[outcome], na.last = NA),]
View(sorted_outcome)
alpha_sorted_outcome <-  sorted_outcome[order(sorted_outcome$Hospital.Name),]
View(alpha_sorted_outcome)
sorted_outcome <-  state_subset[order(state_subset[outcome],state_subset$Hospital.Name, na.last = NA),]
View(sorted_outcome)
sorted_outcome <-  state_subset[order(state_subset$`heart failure`,state_subset$Hospital.Name, na.last = NA),]
View(sorted_outcome)
outcome <- "heart attack"
sorted_outcome <-  state_subset[order(state_subset$`heart failure`,state_subset$Hospital.Name, na.last = NA),]
sorted_outcome <-  state_subset[order(state_subset[outcome],state_subset$Hospital.Name, na.last = NA),]
View(sorted_outcome)
source('~/DataScience/RProgramming/Assignment3/best.R')
if(!outcome %in% outcome_options) stop("invalid outcome")
outcome <- "sx"
if(!outcome %in% outcome_options) stop("invalid outcome")
best <- 1
best
best <- 1
best
worst <- nrow(sorted_outcome)
worst
num <- 369
if(num > nrow) stop(NA)
num
nrow
worst
if(num > worst) stop(NA)
num <- 370
if(num > worst) stop(NA)
num <- 371
if(num > worst) stop(NA)
source('~/DataScience/RProgramming/Assignment3/best.R')
?index
?if
f
index <- ifelse(num = "best", 1, ifelse(num = "worst", worst, num))
ifelse(num = "worst", worst, num)
best
best
num
num <- "worst"
worst
ifelse(num = "worst", worst, num)
?ifelse
if (num = "best") {
index <- 1
} else if (num = "worst") {
index <- worst
} else
index <- num
if (num == "best") {
index <- 1
} else if (num == "worst") {
index <- worst
} else
index <- num
outcome_data <- read.csv("outcome-of-care-measures.csv")
outcome_options <- c("heart attack", "heart failure", "pneumonia")
colnames(outcome_data)[c(11,17,23)] <- outcome_options
state <- "TX"
outcome <- "heart failure"
num = 4
state_subset <- outcome_data[outcome_data$State == state,]
sorted_outcome <-  state_subset[order(state_subset[outcome],state_subset$Hospital.Name, na.last = NA),]
View(state_subset)
View(sorted_outcome)
outcome <- "heart attack"
sorted_outcome <-  state_subset[order(state_subset[outcome],state_subset$Hospital.Name, na.last = NA),]
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(sorted_outcome)
} else index <- num
as.character(sorted_outcome$Hospital.Name[index])
source('~/DataScience/RProgramming/Assignment3/rankhospital.R')
rankhospital("TX", "heart attack", best)
rankhospital("TX", "heart attack", "best")
rankhospital("TX", "heart attack", "worst")
rankhospital("TX", "heart attack", 30)
rankhospital("TX", "heart attack", 3)
rankhospital("TX", "heart attack", 400)
source('~/DataScience/RProgramming/Assignment3/rankhospital.R')
source('~/DataScience/RProgramming/Assignment3/best.R')
setwd("~/Documents/DataScience/RProgramming/Assignment3/Assignment3")
outcome_data <- read.csv("outcome-of-care-measures.csv")
outcome_options <- c("heart attack", "heart failure", "pneumonia")
colnames(outcome_data)[c(11,17,23)] <- outcome_options
View(outcome_data)
View(outcome_data)
?order
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/best.R')
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/best.R')
best("TX", "heart attack")
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/best.R')
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankhospital.R')
best("TX", "heart attack")
best("TX", "heart attack")
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/best.R')
best("TX", "heart attack")
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/best.R')
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/best.R')
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/best.R')
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankhospital.R')
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankhospital.R')
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankhospital.R')
nrow(state)
nrow(state.abb)
state.abb
count(state.abb)
quantity(state.abb)
length(state.abb)
state.abb[2]
outcome <- "heart attack"
num <- 20
outcome_subset <-  outcome_data[order(as.numeric(outcome_data[[outcome]]),outcome_data$Hospital.Name, na.last = NA),]
View(outcome_subset)
?cor
?rbind
?na.or.complete
dat <- data.frame()
i <- 1
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
index <- 4
index <- 20
hosp_name <- as.character(sorted_outcome$Hospital.Name[index])
hosp_name <- as.character(outcome_subset$Hospital.Name[index])
View(outcome_subset)
hosp_name <- as.character(ranked$Hospital.Name[index])
View(ranked)
state.abb
i <- 2
state.abb[i]
i <- 3
state.abb[i]
i <- 1
state.abb[i]
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankall.R')
rankall("heart attack", 5)
warnings()
head(rankall("heart attack", 20), 10)
warnings()
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankall.R')
source('~/Documents/DataScience/RProgramming/Assignment3/Assignment3/rankhospital.R')
rankhospital("TX", "heart attack", best)
rankhospital("TX", "heart attack", "best")
?colnames
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_options <- c("heart attack", "heart failure", "pneumonia")
colnames(outcome_data)[c(11,17,23)] <- outcome_options
if(!outcome %in% outcome_options) stop("invalid outcome")
outcome <- "heart attack"
num <- 20
if(!outcome %in% outcome_options) stop("invalid outcome")
outcome <- "heart attac"
if(!outcome %in% outcome_options) stop("invalid outcome")
outcome <- "heart attack"
if(!outcome %in% outcome_options) stop("invalid outcome")
View(outcome_data)
outcome_subset <-  outcome_data[order(as.numeric(outcome_data[[outcome]]),outcome_data$Hospital.Name, na.last = NA),]
View(outcome_subset)
outcome <- "heart failure"
outcome_subset <-  outcome_data[order(as.numeric(outcome_data[[outcome]]),outcome_data$Hospital.Name, na.last = NA),]
View(outcome_subset)
outcome <- "heart attack"
outcome_subset <-  outcome_data[order(as.numeric(outcome_data[[outcome]]),outcome_data$Hospital.Name, na.last = NA),]
dat <- data.frame()
View(dat)
colnames(dat) <- c("hospital", "state")
?data.frame
data.frame(0,2)
data.frame(dims(0,2))
?dims
dim(dat) <- (c(0,2))
dat
data.frame(NULL, NULL)
data.frame(ncol = 2)
dat <- data.frame(ncol = 2)
View(dat)
dat <- data.frame(ncol = 2, nrow = 0)
dat <- data.frame(hospital = NULL, state = NULL)
dims(dat)
dim(dat)
dimnames(dat)
dat
colnames(dat) <- c("hospital", "state")
i<-1
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
View(ranked)
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
num <- "best"
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
num <- "worst"
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
num <- 20
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
num <- 99
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
hosp_name
num <- 20
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
state.abb[i]
c(hosp_name, state.abb[i])
rbind(dat, c(hosp_name, state.abb[i]))
dat <- rbind(dat, c(hosp_name, state.abb[i]))
View(dat)
colnames(dat) <- c("hospital", "state")
View(dat)
length(state.abb)
i <- 50
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
View(ranked)
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
num <- "worst"
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
dat <- rbind(dat, c(hosp_name, state.abb[i]))
View(dat)
dat
rbind(dat, c(hosp_name, state.abb[i]))
dat <- rbind(dat, as.character(c(hosp_name, state.abb[i]))
)
?rbind
dat <- rbind(dat, c(3,4))
dat <- rbind(dat, c("A","B"))
ranked <- NULL
dat <- NULL
dat <- data.frame()
class(dat)
colclass(dat)
classes(dat)
summary(dat)
str(dat)
i <- 1
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
dat <- rbind(dat, as.character(c(hosp_name, state.abb[i]))
)
View(dat)
str(dat)
i <- 50
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
dat <- rbind(dat, as.character(c(hosp_name, state.abb[i]))
)
dat <- rbind(dat, c(hosp_name, state.abb[i]))
str(dat)
?strings.as.factors
dat <- data.frame(stringsAsFactors = FALSE)
i <- 1
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
dat
dat <- rbind(dat, c(hosp_name, state.abb[i]))
dat
i <- 50
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
dat <- rbind(dat, c(hosp_name, state.abb[i]))
str(dat)
dat <- rbind(dat, as.character(c(hosp_name, state.abb[i])))
str(dat)
colnames(dat) <- c("hospital", "state")
str(dat)
?rbind.data.frame
dat <- data.frame(stringsAsFactors = FALSE)
i <- 1
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- as.character(ranked$Hospital.Name[index])
hosp_name <- ranked$Hospital.Name[index])
hosp_name <- ranked$Hospital.Name[index]
class(hosp_name)
dat <- rbind.data.frame(dat, c(hosp_name, state.abb[i]))
dat
i <- 50
ranked <- outcome_subset[outcome_subset$State == state.abb[i],]
if (num == "best") {index <- 1
} else if (num == "worst") {index <- nrow(ranked)
} else index <- num
hosp_name <- ranked$Hospital.Name[index])
hosp_name <- ranked$Hospital.Name[index]
state.abb[i]
test <- state.abb[i]
class(test)
dat <- rbind.data.frame(dat, c(hosp_name, state.abb[i]))
source('~/Documents/DataScience/RProgramming/Assignment3/rankall.R')
rankall("heart attack", 20)
source('~/Documents/DataScience/RProgramming/Assignment3/rankall.R')
